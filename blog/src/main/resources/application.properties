spring.application.name=blog

server.port=8082

#mysql 연결 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/jsl18?serverTimezone=UTC
spring.datasource.username=user18
spring.datasource.password=1234

# MyBatis 매퍼 파일 경로
mybatis.mapper-locations=classpath:/mybatis/mapper/**/*.xml
# MyBatis 타입 별칭 사용
mybatis.type-aliases-package=com.blog.domain


#쿼리에 물음표로 출력되는 바인트 파라미터 출력
logging.level.org.hibernate.type.descriptor.sql=trace

#JPA기법
#spring.jpa.hibernate.ddl-auto=create
#스테이징 운영환경에서는 절대로 create, create-drop,update를 사용하면 안된다
#운영서버에서는 테이블 생성및 컬럼추가,삭제,변경은 dB에서 직접하며 none을 사용하거나, validate를 이용하여 정상적인 매핑 관계만 확인한다
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

#live reload 기능 활성화
spring.devtools.livereload.enabled=true

spring.security.csrf.enabled=true

#타임리프 캐시 사용중지
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true

#파일 업로드 가능여부 설정
spring.servlet.multipart.enabled=true
#업로드 파일의 임시 저장 경로
spring.servlet.multipart.location=D://upload
#한번에 최대 업로드 용량
spring.servlet.multipart.max-request-size=30MB
#파일 하나당 최대크기
spring.servlet.multipart.max-file-size=10MB
#실제 업로드 경로
project.uploadpath=file:///D:/upload/

#네이버 메일 보내기
spring.mail.host=smtp.naver.com
spring.mail.port=465
spring.mail.username=car1214@naver.com
spring.mail.password=57KHZMZJ54DL
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.naver.com
spring.mail.properties.mail.smtp.starttls.enable=true

#encoding
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true
server.servlet.encoding.enabled=true

logging.level.org.mybatis=DEBUG
logging.level.com.blog.mapper=DEBUG